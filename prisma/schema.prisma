generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum CheckMethodType {
  HTTP
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Service Service[]
}

model Service {
  id         Int      @id @default(autoincrement())
  name       String
  pos        Int      @default(0)
  // isOnline   Boolean  @default(false) @map("is_online") // will be deleted
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  // checking method
  check_method CheckMethodType @default(HTTP)
  url          String?

  // meta
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  Event     Event[]
  StatusLog StatusLog[]
  @@map(name: "services")
}

model Event {
  id        Int      @id @default(autoincrement())
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  isOnline  Boolean  @default(false) @map("is_online")
  dtStart   DateTime @default(now()) @map(name: "created_at")
  dtEnd     DateTime @updatedAt @map(name: "updated_at")
  msg       String?
}

model StatusLog {
  id        Int      @id @default(autoincrement())
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId Int
  isOnline  Boolean  @default(false) @map("is_online")
  dt        DateTime @default(now()) @map(name: "created_at")
  ms        Float    @default(0)
  msg       String?
}
